default error messages http://www.w3.org/TR/IndexedDB/#dfn-transactioninactiveerror

assert_readonly in IDBCursorBehavior

readonly properties need to actually be readonly
- FDBCursor.direction
- FDBCursor.key
- others?

Two IDBCursor.update tests skipped
- what do I do about DataCloneError?

FEATURES TO TRY NEXT
- FDBIndex.openKeyCursor
  - unskip IDBCursorBehavior test

weird things happen if i listen for success but not upgradeneeded

share some code between Index and ObjectStore, like getValue, confirmActiveTransaction
- similar thing between open and deleteDatabase

TRICKY THINGS TO FIGURE OUT (and test) ASAP:
- transaction and request scheduling - seems to work so far
  - reevaluate all uses of setTimeout, setImmediate, and process.nextTick
- transaction abort/rollback
  - also include key generator state somehow
  - objectStoreNames, indexNames

convert tests from web-platform-tests and delete as i go
- missing:
  - comprehensive tests of aborted transaction rollback
  - (because of assert.throws I think) error propagation to transaction rejection
  - multiple transactions interacting, like readwrite blocking another but allowing readonly
  - IDBObjectStore.openCursor with various valid arguments
- to fix and contribute back
  - idbfactory_open9 should use val in should_work
  - idbdatabase_close first 'block event fired #' should be 'versionchange event fired #'
  - idbdatabase_createObjectStore11 spelling in title
  - idbobjectstore_openCursor should actually check count
  - idbversionchangeevent - db.abort should be db.onabort
  - idbcursor_advance_index, idbcursor_advance_objectstore - event should be e

break events stuff into separate module, maybe fakeDOMEvents

go through and fix all the left comments (todo stuff)

move index.js stuff to FDBFactory

_ properties should be hidden from standard functions

Other tests
- https://chromium.googlesource.com/chromium/blink/+/72fef91ac1ef679207f51def8133b336a6f6588f/LayoutTests/storage/indexeddb
- https://github.com/mozilla/gecko-dev/tree/master/dom/indexedDB/test

Change comment links to http://www.w3.org/TR/2015/REC-IndexedDB-20150108/ which will be stable

could event.target be automatically set to X in X.dispatchEvent(event);? Any time where that's not true?

For .filter calls that are deleting items from arrays (such as ObjectStore.deleteRecord) it might be faster to use splice as iterating over the array

objectStoreNames and indexNames should be DOMStringLists
- see https://github.com/facebookarchive/IndexedDB-polyfill/blob/master/indexedDB.polyfill.js#L36